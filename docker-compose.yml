networks:
  transcendence:

services:
  backend:
    build: ./backend
    container_name: trans-backend
    volumes:
      - /app/node_modules
    env_file:
      - ./.env
    environment:
      - SITE_URL=${SITE_URL}
      - FRONT_URL=${FRONT_URL}
      - BACK_URL=${BACK_URL}
      - FRONT_PORT=${FRONT_PORT}
      - BACK_PORT=${BACK_PORT}
    ports:
      - "4000:4000"
    depends_on:
      - database
    networks:
      - transcendence
    restart: always

  frontend:
    build: ./frontend
    container_name: trans-frontend
    volumes:
      - /app/node_modules
    env_file:
      - ./.env
    environment:
      - PUBLIC_URL=${FRONT_URL}
      - REACT_APP_BACKEND_URL=${BACK_URL}
      - REACT_APP_LOGIN_CLIENT_ID=${LOGIN_CLIENT_ID}
      - REACT_APP_LOGIN_CLIENT_SECRET=${LOGIN_CLIENT_SECRET}
      - REACT_APP_LOGIN_REDIRECT=${LOGIN_REDIRECT}
      - REACT_APP_LOGIN_STATE=${LOGIN_STATE}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - transcendence
    restart: always

  database:
    build: ./database
    container_name: trans-database
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    networks:
      - transcendence
    restart: always

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "1024:1024"
    restart: unless-stopped
    networks:
      - transcendence
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data: